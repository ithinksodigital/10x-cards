---
import "../styles/global.css";
import { ThemeToggle } from "../components/ui/ThemeToggle";
import { StaticUserMenu } from "../components/auth/StaticUserMenu";

interface Props {
  title?: string;
  description?: string;
  requireAuth?: boolean;
  user?: any;
  session?: any;
  isAuthenticated?: boolean;
}

const { 
  title = "10x Cards", 
  description = "Generuj i zarządzaj fiszkami do nauki z pomocą AI. Twórz skuteczne zestawy fiszek z dowolnego tekstu.",
  requireAuth = false,
  user = Astro.locals.user ?? null,
  session = null,
  isAuthenticated = !!(Astro.locals.user)
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="min-h-screen bg-background text-foreground">
      <!-- Header with theme toggle and auth -->
      <header class="border-b border-border bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60 sticky top-0 z-50">
        <div class="container mx-auto px-4 py-4 flex justify-between items-center">
          <div class="flex items-center gap-4">
            <a href="/" class="text-xl font-semibold text-foreground hover:text-primary transition-colors">
              10x Cards
            </a>
            <nav class="hidden md:flex items-center gap-4">
              <a href="/generate" class="text-sm text-muted-foreground hover:text-foreground transition-colors">
                Generuj fiszki
              </a>
              {isAuthenticated && (
                <a href="/dashboard" class="text-sm text-muted-foreground hover:text-foreground transition-colors">
                  Dashboard
                </a>
              )}
            </nav>
          </div>
          <div class="flex items-center gap-2">
            {isAuthenticated ? (
              <StaticUserMenu client:load user={user} />
            ) : (
              <div class="flex items-center gap-2">
                <a 
                  href="/auth/login" 
                  class="text-sm text-muted-foreground hover:text-foreground transition-colors"
                >
                  Zaloguj się
                </a>
                <a 
                  href="/auth/register" 
                  class="text-sm bg-primary text-primary-foreground px-3 py-1.5 rounded-md hover:bg-primary/90 transition-colors"
                >
                  Utwórz konto
                </a>
              </div>
            )}
            <ThemeToggle client:load />
          </div>
        </div>
      </header>
      
      <!-- Main content -->
      <main>
        <slot />
      </main>
    </div>
  </body>
</html>

<style>
  html,
  body {
    margin: 0;
    width: 100%;
    height: 100%;
  }
</style>
